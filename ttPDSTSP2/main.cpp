#include <iostream>
#include <fstream>
#include <vector>
#include <sstream>
#include <chrono>
#include "Solver.h"

using namespace std;
using namespace std::chrono;

int main() {
    vector<string> inputs = {
        "20140813T111604|1", "20140813T111606|1", "20140813T111606|2", "20140813T111609|1",
        "20140813T111609|2", "20140813T111611|1", "20140813T111611|2", "20140813T111613|1",
        "20140813T111615|1", "20140813T111617|1", "20140813T111617|2", "20140813T111619|1",
        "20140813T111619|2", "20140813T111621|1", "20140813T111621|2", "20140813T111623|1",
        "20140813T111623|2", "20140813T111626|1", "20140813T111628|1", "20140813T111628|2",
        "20140813T111630|1", "20140813T111630|2", "20140813T111632|1", "20140813T111634|1",
        "20140813T111634|2", "20140813T111636|1", "20140813T111636|2", "20140813T111638|1",
        "20140813T111638|2", "20140813T111640|1", "20140813T111640|2", "20140813T111642|1",
        "20140813T111644|1", "20140813T111646|1", "20140813T111646|2", "20140813T111649|1",
        "20140813T111649|2", "20140813T111651|1", "20140813T111651|2", "20140813T111653|1",
        "20140813T111655|1", "20140813T111657|1", "20140813T111659|1", "20140813T111659|2",
        "20140813T111701|1", "20140813T111701|2", "20140813T111703|1", "20140813T111705|1",
        "20140813T111708|1", "20140813T111708|2", "20140813T111708|3", "20140813T111710|1",
        "20140813T111710|2", "20140813T111710|3", "20140813T111712|1", "20140813T111712|2",
        "20140813T111712|3", "20140813T111714|1", "20140813T111714|2", "20140813T111714|3",
        "20140813T111716|1", "20140813T111716|2", "20140813T111716|3", "20140813T111718|1",
        "20140813T111718|2", "20140813T111718|3", "20140813T111720|1", "20140813T111720|2",
        "20140813T111720|3", "20140813T111722|1", "20140813T111722|2", "20140813T111722|3",
        "20140813T111725|1", "20140813T111725|2", "20140813T111725|3", "20140813T111727|1",
        "20140813T111727|2", "20140813T111727|3", "20140813T111729|1", "20140813T111729|2",
        "20140813T111729|3", "20140813T111731|1", "20140813T111731|2", "20140813T111733|1",
        "20140813T111733|2", "20140813T111733|3", "20140813T111735|1", "20140813T111735|2",
        "20140813T111735|3", "20140813T111737|1", "20140813T111737|2", "20140813T111737|3",
        "20140813T111740|1", "20140813T111740|2", "20140813T111740|3", "20140813T111742|1",
        "20140813T111742|2", "20140813T111742|3", "20140813T111744|1", "20140813T111744|2",
        "20140813T111744|3", "20140813T111746|1", "20140813T111746|2", "20140813T111746|3",
        "20140813T111748|1", "20140813T111748|2", "20140813T111748|3", "20140813T111750|1",
        "20140813T111750|2", "20140813T111750|3", "20140813T111752|1", "20140813T111752|2",
        "20140813T111752|3", "20140813T111754|1", "20140813T111754|2", "20140813T111754|3",
        "20140813T111756|1", "20140813T111756|2", "20140813T111756|3", "20140813T111758|1",
        "20140813T111758|2", "20140813T111758|3", "20140813T111801|1", "20140813T111801|2",
        "20140813T111801|3", "20140813T111803|1", "20140813T111803|2", "20140813T111803|3",
        "20140813T111805|1", "20140813T111805|2", "20140813T111805|3", "20140813T111807|1",
        "20140813T111807|2", "20140813T111807|3", "20140813T111809|1", "20140813T111809|2",
        "20140813T111809|3", "20140813T111811|1", "20140813T111811|2", "20140813T111811|3",
        "20140813T111813|1", "20140813T111813|2", "20140813T111813|3", "20140813T111815|1",
        "20140813T111815|2", "20140813T111815|3", "20140813T111817|1", "20140813T111817|2",
        "20140813T111817|3", "20140813T111820|1", "20140813T111820|2", "20140813T111820|3",
        "20140813T111822|1", "20140813T111822|2", "20140813T111822|3", "20140813T111824|1",
        "20140813T111824|2", "20140813T111824|3", "20140813T111826|1", "20140813T111826|2",
        "20140813T111826|3", "20140813T111828|1", "20140813T111828|2", "20140813T111828|3",
        "20140813T111830|1", "20140813T111830|2", "20140813T111830|3", "20140813T111832|1",
        "20140813T111832|2", "20140813T111832|3", "20140813T111834|1", "20140813T111834|2",
        "20140813T111834|3", "20140813T111836|1", "20140813T111836|2", "20140813T111836|3",
        "20140813T111838|1", "20140813T111838|2", "20140813T111838|3", "20140813T111841|1",
        "20140813T111841|2", "20140813T111841|3", "20140813T111843|1", "20140813T111843|2",
        "20140813T111843|3", "20140813T111845|1", "20140813T111845|2", "20140813T111845|3",
        "20140813T111847|1", "20140813T111847|2", "20140813T111847|3", "20140813T111849|1",
        "20140813T111849|2", "20140813T111849|3", "20140813T111851|1", "20140813T111851|2",
        "20140813T111851|3", "20140813T111853|1", "20140813T111853|2", "20140813T111853|3",
        "20140813T111855|1", "20140813T111855|2", "20140813T111855|3", "20140813T111857|1",
        "20140813T111857|2", "20140813T111857|3", "20140813T111859|1", "20140813T111859|2",
        "20140813T111859|3", "20140813T111902|1", "20140813T111902|2", "20140813T111902|3",
        "20140813T111904|1", "20140813T111904|2", "20140813T111904|3", "20140813T111906|1",
        "20140813T111906|2", "20140813T111906|3", "20140813T111908|1", "20140813T111908|2",
        "20140813T111908|3", "20140813T111910|1", "20140813T111910|2", "20140813T111910|3",
        "20140813T111912|1", "20140813T111912|2", "20140813T111912|3", "20140813T111914|1",
        "20140813T111914|2", "20140813T111914|3", "20140813T111916|1", "20140813T111916|2",
        "20140813T111916|3", "20140813T111918|1", "20140813T111918|2", "20140813T111918|3",
        "20140813T111920|1", "20140813T111920|2", "20140813T111920|3", "20140813T111922|1",
        "20140813T111922|2", "20140813T111922|3", "20140813T111925|1", "20140813T111925|2",
        "20140813T111925|3", "20140813T111927|1", "20140813T111927|2", "20140813T111927|3",
        "20140813T111929|1", "20140813T111929|2", "20140813T111929|3", "20140813T111931|1",
        "20140813T111931|2", "20140813T111931|3", "20140813T111933|1", "20140813T111933|2",
        "20140813T111933|3", "20140813T111935|1", "20140813T111935|2", "20140813T111935|3",
        "20140813T111937|1", "20140813T111937|2", "20140813T111937|3", "20140813T111939|1",
        "20140813T111939|2", "20140813T111939|3", "20140813T111941|1", "20140813T111941|2",
        "20140813T111941|3", "20140813T111943|1", "20140813T111943|2", "20140813T111943|3",
        "20140813T111945|1", "20140813T111945|2", "20140813T111945|3", "20140813T111948|1",
        "20140813T111948|2", "20140813T111948|3", "20140813T111950|1", "20140813T111950|2",
        "20140813T111950|3", "20140813T111952|1", "20140813T111952|2", "20140813T111952|3",
        "20140813T111954|1", "20140813T111954|2", "20140813T111954|3", "20140813T111956|1",
        "20140813T111956|2", "20140813T111956|3", "20140813T111959|1", "20140813T111959|2",
        "20140813T111959|3", "20140813T112001|1", "20140813T112001|2", "20140813T112001|3",
        "20140813T112003|1", "20140813T112003|2", "20140813T112003|3", "20140813T112005|1",
        "20140813T112005|2", "20140813T112005|3", "20140813T112007|1", "20140813T112007|2",
        "20140813T112007|3", "20140813T112010|1", "20140813T112010|2", "20140813T112010|3",
        "20140813T112012|1", "20140813T112012|2", "20140813T112012|3", "20140813T112014|1",
        "20140813T112014|2", "20140813T112014|3", "20140813T112016|1", "20140813T112016|2"
    };

    ofstream outFile("pdstsp.csv");
    outFile << "Filename,Obj,Runtime\n";

    for (const auto& input : inputs) {
        stringstream ss(input);
        string filename;
        int numUAVs;

        getline(ss, filename, '|');
        ss >> numUAVs;

        INSTANCE instance;
        instance.loadFromFile(filename);
        instance.UAVs = numUAVs;  // Set the number of UAVs in the instance

        Solver solver(instance);

        // Measure the execution time of the solve method
        auto start = high_resolution_clock::now();
        solver.solve();
        auto end = high_resolution_clock::now();
        auto duration = duration_cast<milliseconds>(end - start).count();

        // Write results to CSV
        outFile << input << ",";  // Print the filename in the format 20140813T111604|1
        outFile << solver.tinhTotaltime(solver.drones, solver.totalTimeTruck) << ",";
        outFile << duration << "ms\n";  // Print the runtime duration
    }

    outFile.close();
    cout << "Results written to pdstsp.csv\n";
    return 0;
}